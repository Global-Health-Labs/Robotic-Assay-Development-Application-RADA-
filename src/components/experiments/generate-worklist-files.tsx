import { useState, useEffect } from 'react';
import { CSVLink } from 'react-csv';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Download, FileText, Table } from 'lucide-react';
import { getMastermixWorklistData } from '@/utils/generateMastermixWorklist';
import { getSampleWorklistData } from '@/utils/generateSampleWorklist';
import { Mastermix } from '@/api/experiments.api';

const FILE_NAME = {
  EXPERIMENTAL_PLAN: 'experimental-plan-RoboNAAT.txt',
  MASTERMIX_WORKLIST: 'mastermix_worklist.csv',
  SAMPLE_WORKLIST: 'sample_worklist.csv',
} as const;

const SPECIAL_CHAR_FILE = '*****-----*****';

interface ExperimentPlan {
  nameOfExperimentalPlan: string;
  masterMixVolumnPerReaction: number;
  sampleVolumnPerReaction: number;
  pcrPlateSize: number;
  numOfSampleConcentrations: number;
  numOfTechnicalReplicates: number;
  experimentalPlanID: string;
}

interface GenerateWorklistFilesProps {
  experiment: ExperimentPlan[];
  mastermixes: Mastermix[];
}

export function GenerateWorklistFiles({ experiment, mastermixes }: GenerateWorklistFilesProps) {
  const [mastermixData, setMastermixData] = useState<any[]>([]);
  const [sampleData, setSampleData] = useState<any[]>([]);

  useEffect(() => {
    // Convert experiment and mastermixes data to match the expected format
    const experimentalPlanData = experiment.map((exp) => ({
      masterMixVolumnPerReaction: exp.masterMixVolumnPerReaction,
      sampleVolumnPerReaction: exp.sampleVolumnPerReaction,
      numOfSampleConcentrations: exp.numOfSampleConcentrations,
      numOfTechnicalReplicates: exp.numOfTechnicalReplicates,
      pcrPlateSize: exp.pcrPlateSize.toString(),
    }));

    // Generate mastermix worklist data
    const mastermixWorklistData = getMastermixWorklistData(mastermixes, experimentalPlanData, true);
    setMastermixData(mastermixWorklistData);

    // Generate sample worklist data
    const sampleWorklistData = getSampleWorklistData(mastermixes, experimentalPlanData);
    setSampleData(sampleWorklistData);
  }, [experiment, mastermixes]);

  const exportTableTextFile = () => {
    const fileData =
      'DO NOT EDIT THIS FILE\n\n\n' +
      SPECIAL_CHAR_FILE +
      '\n\n\n' +
      JSON.stringify(experiment, null, '\t') +
      '\n\n\n' +
      SPECIAL_CHAR_FILE +
      '\n\n\n' +
      JSON.stringify(mastermixes, null, '\t');

    const element = document.createElement('a');
    const file = new Blob([fileData], { type: 'text/plain;charset=utf-8' });
    element.href = URL.createObjectURL(file);
    element.download = FILE_NAME.EXPERIMENTAL_PLAN;
    document.body.appendChild(element);
    element.click();
    element.remove();
  };

  return (
    <div className="grid gap-4 md:grid-cols-3">
      <Card>
        <CardHeader>
          <CardTitle>Experimental Plan</CardTitle>
          <CardDescription>Download the experimental plan configuration file</CardDescription>
        </CardHeader>
        <CardContent>
          <Button onClick={exportTableTextFile} className="w-full">
            <FileText className="mr-2 h-4 w-4" />
            Download .txt
          </Button>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Mastermix Worklist</CardTitle>
          <CardDescription>Download the mastermix worklist CSV file</CardDescription>
        </CardHeader>
        <CardContent>
          <CSVLink data={mastermixData} filename={FILE_NAME.MASTERMIX_WORKLIST} className="w-full">
            <Button className="w-full">
              <Table className="mr-2 h-4 w-4" />
              Download CSV
            </Button>
          </CSVLink>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Sample Worklist</CardTitle>
          <CardDescription>Download the sample worklist CSV file</CardDescription>
        </CardHeader>
        <CardContent>
          <CSVLink data={sampleData} filename={FILE_NAME.SAMPLE_WORKLIST} className="w-full">
            <Button className="w-full">
              <Download className="mr-2 h-4 w-4" />
              Download CSV
            </Button>
          </CSVLink>
        </CardContent>
      </Card>
    </div>
  );
}
